<!DOCTYPE html>
<html lang="en">

	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, shrink-to-fit=9">
		<meta name="description" content="Gambolthemes">
		<meta name="author" content="Gambolthemes">		
		<title>Fairway Supermarket</title>
		
		<!-- Favicon Icon -->
		<link rel="icon" type="image/png" href="images/fav.png">
		
		<!-- Stylesheets -->
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
		<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
		
		<link href="https://fonts.googleapis.com/css2?family=Rajdhani:wght@300;400;500;600;700&display=swap" rel="stylesheet">
		<link href='/user/vendor/unicons-2.0.1/css/unicons.css' rel='stylesheet'>
		<link href="/user/css/style.css" rel="stylesheet">
		<link href="/user/css/responsive.css" rel="stylesheet">
		<link href="/user/css/night-mode.css" rel="stylesheet">
		<link href="/user/css/customstyle.css" rel="stylesheet">
		<link  href="/user/css/signupmodals.css"  rel="stylesheet">
        <link  href="/user/css/editProfileModal.css"  rel="stylesheet">
		
		<!-- Vendor Stylesheets -->
		<link href="/user/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
		<link href="/user/vendor/OwlCarousel/assets/owl.carousel.css" rel="stylesheet">
		<link href="/user/vendor/OwlCarousel/assets/owl.theme.default.min.css" rel="stylesheet">
		<link href="/user/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
		<link href="/user/vendor/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet">	
        
		
		
	</head>


	<body>
		<!-- Header Start -->
		<%- include('../partials/user/header', { parentCategories: parentCategories }) %>
		

		
		<!-- Header End -->
	
		<!-- Body Start -->
		<div class="wrapper">
			<div class="gambo-Breadcrumb">
				<div class="container">
					<div class="row">
						<div class="col-md-12">
							<nav aria-label="breadcrumb">
								<ol class="breadcrumb">
									<li class="breadcrumb-item"><a href="/">Home</a></li>
									<li class="breadcrumb-item active" aria-current="page"><%= user.name %> Dashboard</li>
								</ol>
							</nav>
						</div>
					</div>
				</div>
			</div>
			<div class="dashboard-group">
				<div class="container">
					<div class="row">
						<div class="col-lg-12">
							<div class="user-dt">
								<div class="user-img">
									<img src="/images/avatar/img-5.jpg" alt="">
									<div class="img-add">													
										<input type="file" id="file">
										<label for="file"><i class="uil uil-camera-plus"></i></label>
									</div>
								</div>
								<h4><%= user.name %></h4>
								<p><%= user.email%>
                                <p><%= user.phone ? user.phone : '' %></p> 
                                <button class="btn btn-edit-profile" onclick="openEditModal()">
                                    <i class="uil uil-edit"></i> Edit Profile
                                </button>
                                <% if (user.password ) { %>
                                <button class="btn btn-secondary" onclick="openResetPasswordModal()">
                                    <i class="uil uil-key-skeleton"></i> Reset Password
                                </button>
                                <% } %>
   

							</div>
						</div>
					</div>
				</div>
			</div>	
			<div class="">
				<div class="container">
					<div class="row">
						<div class="col-xl-3 col-lg-4 col-md-12">
							<div class="left-side-tabs">
								<div class="dashboard-left-links">
									<a href="/dashboard" class="user-item active"><i class="uil uil-apps"></i>Overview</a>
									<a href="dashboard_my_orders.html" class="user-item"><i class="uil uil-box"></i>My Orders</a>
									<a href="dashboard_my_cart.html" class="user-item"><i class="uil uil-cart"></i>My Cart</a>
									<a href="dashboard_my_wallet.html" class="user-item"><i class="uil uil-wallet"></i>My Wallet</a>
									<a href="dashboard_my_wishlist.html" class="user-item"><i class="uil uil-heart"></i>Shopping Wishlist</a>
									<a href="/dashboard/addresses"  class="user-item"><i class="uil uil-location-point"></i>My Address</a>
									<a href="/logout" class="user-item"><i class="uil uil-exit"></i>Logout</a>
								</div>
							</div>
						</div>
                        <div class="col-xl-9 col-lg-8 col-md-12">
                            <div class="dashboard-right">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="main-title-tab">
                                            <h4><i class="uil uil-location-point"></i>My Address</h4>
                                        </div>
                                    </div>
                                    <div class="col-lg-12 col-md-12">
                                        <div class="pdpt-bg">
                                            <div class="pdpt-title">
                                                <h4>My Address</h4>
                                            </div>
                                            <div class="address-body">
                                                <a href="#" class="add-address hover-btn" data-bs-toggle="modal" data-bs-target="#address_model">Add New Address</a>
                                                <div class="address-item">
                                                    <div class="address-icon1">
                                                        <i class="uil uil-map-marker"></i>
                                                    </div>
                                                    <div class="address-dt-all">
                                                        <h4>Home</h4>
                                                        <p>#0000, St No. 8, Shahid Karnail Singh Nagar, MBD Mall, Frozpur road, Ludhiana, 141001</p>
                                                        <ul class="action-btns">
                                                            <li><a href="#" class="action-btn"><i class="uil uil-edit"></i></a></li>
                                                            <li><a href="#" class="action-btn"><i class="uil uil-trash-alt"></i></a></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="address-item">
                                                    <div class="address-icon1">
                                                        <i class="uil uil-map-marker"></i>
                                                    </div>
                                                    <div class="address-dt-all">
                                                        <h4>Office</h4>
                                                        <p>#0000, St No. 8, Shahid Karnail Singh Nagar, MBD Mall, Frozpur road, Ludhiana, 141001</p>	
                                                        <ul class="action-btns">
                                                            <li><a href="#" class="action-btn"><i class="uil uil-edit"></i></a></li>
                                                            <li><a href="#" class="action-btn"><i class="uil uil-trash-alt"></i></a></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="address-item">
                                                    <div class="address-icon1">
                                                        <i class="uil uil-map-marker"></i>
                                                    </div>
                                                    <div class="address-dt-all">
                                                        <h4>Other</h4>
                                                        <p>#0000, St No. 8, Shahid Karnail Singh Nagar, MBD Mall, Frozpur road, Ludhiana, 141001</p>
                                                        <ul class="action-btns">
                                                            <li><a href="#" class="action-btn"><i class="uil uil-edit"></i></a></li>
                                                            <li><a href="#" class="action-btn"><i class="uil uil-trash-alt"></i></a></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

						

						</div>
					</div>	
				</div>	
			</div>
            <!-- Add Address Model Start-->
	<div id="address_model" class="header-cate-model main-gambo-model modal fade" tabindex="-1" role="dialog" aria-modal="false">
        <div class="modal-dialog category-area" role="document">
            <div class="category-area-inner">
                <div class="modal-header">
                    <button type="button" class="close btn-close" data-bs-dismiss="modal" aria-label="Close">
						<i class="uil uil-multiply"></i>
                    </button>
                </div>
                <div class="category-model-content modal-content"> 
					<div class="cate-header">
						<h4 class="mb-0">Add New Address</h4>
					</div>
					<div class="add-address-form">
						<div class="checout-address-step">
							<div class="row">
								<div class="col-lg-12">												
									<form class="">
										<!-- Multiple Radios (inline) -->
										<div class="form-group">
											<div class="product-radio">
												<ul class="product-now">
													<li>
														<input type="radio" id="ad1" name="address1" checked>
														<label for="ad1">Home</label>
													</li>
													<li>
														<input type="radio" id="ad2" name="address1">
														<label for="ad2">Office</label>
													</li>
													<li>
														<input type="radio" id="ad3" name="address1">
														<label for="ad3">Other</label>
													</li>
												</ul>
											</div>
										</div>
										<div class="address-fieldset">
											<div class="row">
												<div class="col-lg-12 col-md-12">
													<div class="form-group mt-4">
														<label class="control-label">Flat / House / Office No.*</label>
														<input id="flat" name="flat" type="text" placeholder="Address" class="form-control input-md" required="">
													</div>
												</div>
												<div class="col-lg-12 col-md-12">
													<div class="form-group mt-4">
														<label class="control-label">Street / Society / Office Name*</label>
														<input id="street" name="street" type="text" placeholder="Street Address" class="form-control input-md">
													</div>
												</div>
												<div class="col-lg-6 col-md-12">
													<div class="form-group mt-4">
														<label class="control-label">Pincode*</label>
														<input id="pincode" name="pincode" type="text" placeholder="Pincode" class="form-control input-md" required="">
													</div>
												</div>
												<div class="col-lg-6 col-md-12">
													<div class="form-group mt-4">
														<label class="control-label">Locality*</label>
														<input id="Locality" name="locality" type="text" placeholder="Enter City" class="form-control input-md" required="">
													</div>
												</div>
												<div class="col-lg-12 col-md-12">
													<div class="form-group mt-30">
														<div class="address-btns">
															<button class="save-btn14 w-100 hover-btn">Save</button>
														</div>
													</div>
												</div>
											</div>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>
                </div>
            </div>
        </div>
    </div>
	<!-- Add Address Model End-->	
        <!-- Edit progile Model -->
        <div class="modal fade" id="editProfileModal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Profile</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editProfileForm" novalidate>
                            <div class="mb-3">
                                <label class="form-label">Name*</label>
                                <input type="text" class="form-control" id="editName" name="name" 
                                       value="<%= user.name %>" required
                                       minlength="3" maxlength="50"
                                       pattern="^[a-zA-Z ]+$">
                                <div class="invalid-feedback" id="nameError">
                                    Name must be 3-15 characters long and contain only letters
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Email*</label>
                                <input type="email" class="form-control" id="editEmail" name="email" 
                                       value="<%= user.email %>" required
                                       pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$">
                                <div class="invalid-feedback" id="emailError">
                                    Please enter a valid email address
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Phone*</label>
                                <input type="tel" class="form-control" id="editPhone" name="phone" 
                                       value="<%= user.phone %>" required
                                       pattern="[0-9]{10}">
                                <div class="invalid-feedback" id="phoneError">
                                    Please enter a valid 10-digit phone number
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="updateProfile()">Save Changes</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Reset Password Modal -->
        <div class="modal fade" id="resetPasswordModal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Reset Password</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="resetPasswordForm" novalidate>
                            <div class="mb-3">
                                <label class="form-label">New Password*</label>
                                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                                <div class="invalid-feedback" id="newPasswordError"></div>
                                <small class="text-muted">
                                    Password must contain:
                                    <ul class="mt-1">
                                        <li id="lengthCheck">At least 8 characters</li>
                                        <li id="upperCheck">At least one uppercase letter</li>
                                        <li id="numberCheck">At least one number</li>
                                        <li id="specialCheck">At least one special character (!@#$%^&*)</li>
                                    </ul>
                                </small>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Confirm Password*</label>
                                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                                <div class="invalid-feedback" id="confirmPasswordError">
                                    Passwords do not match
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="resetPassword()">Reset Password</button>
                    </div>
                </div>
            </div>
        </div>

        

        
	<!-- Body End -->
	<!-- Footer Start -->
	
	<!-- Footer End -->

	<!-- Javascripts -->
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
	<script src="/user/js/jquery.min.js"></script>
	<script src="/user/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
	<script src="/user/vendor/bootstrap-select/js/bootstrap-select.min.js"></script>	
	<script src="/user/vendor/OwlCarousel/owl.carousel.js"></script>
	<script src="/user/js/jquery.countdown.min.js"></script>
	<script src="/user/js/custom.js"></script>
	<script src="/user/js/offset_overlay.js"></script>
	<script src="/user/js/night-mode.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function openEditModal() {
            const modal = new bootstrap.Modal(document.getElementById('editProfileModal'));
            modal.show();
        }
        
        function validateForm() {
            const form = document.getElementById('editProfileForm');
            const name = document.getElementById('editName');
            const email = document.getElementById('editEmail');
            const phone = document.getElementById('editPhone');
            
            // Reset previous validations
            form.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
            
            let isValid = true;
        
            // Name validation
            if (!name.value.trim()) {
                name.classList.add('is-invalid');
                document.getElementById('nameError').textContent = 'Name is required';
                isValid = false;
            } else if (name.value.length < 3 || name.value.length > 50) {
                name.classList.add('is-invalid');
                document.getElementById('nameError').textContent = 'Name must be between 3 and 50 characters';
                isValid = false;
            } else if (!/^[a-zA-Z ]+$/.test(name.value.trim())) {
                name.classList.add('is-invalid');
                document.getElementById('nameError').textContent = 'Name can only contain letters and spaces';
                isValid = false;
            }
        
            // Email validation
            const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            if (!email.value.trim()) {
                email.classList.add('is-invalid');
                document.getElementById('emailError').textContent = 'Email is required';
                isValid = false;
            } else if (!emailRegex.test(email.value.trim())) {
                email.classList.add('is-invalid');
                document.getElementById('emailError').textContent = 'Please enter a valid email address';
                isValid = false;
            }
        
            // Phone validation
            if (!phone.value.trim()) {
                phone.classList.add('is-invalid');
                document.getElementById('phoneError').textContent = 'Phone number is required';
                isValid = false;
            } else if (!/^[0-9]{10}$/.test(phone.value.trim())) {
                phone.classList.add('is-invalid');
                document.getElementById('phoneError').textContent = 'Please enter a valid 10-digit phone number';
                isValid = false;
            }
        
            return isValid;
        }
        
        async function updateProfile() {
            try {
                if (!validateForm()) {
                    return;
                }
        
                const form = document.getElementById('editProfileForm');
                const formData = {
                    name: document.getElementById('editName').value.trim(),
                    email: document.getElementById('editEmail').value.trim(),
                    phone: document.getElementById('editPhone').value.trim()
                };
                
                const response = await fetch('/dashboard/update-profile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
        
                const data = await response.json();
        
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Profile updated successfully',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to update profile'
                    });
                }
            } catch (error) {
                console.error('Update profile error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong. Please try again.'
                });
            }
        }
        
        // Real-time phone number validation
        document.getElementById('editPhone').addEventListener('input', function(e) {
            let value = e.target.value.replace(/\D/g, '');
            if (value.length > 10) value = value.slice(0, 10);
            e.target.value = value;
            
            // Show/hide validation message in real-time
            if (value.length === 10) {
                this.classList.remove('is-invalid');
            }
        });
        
        // Real-time name validation
        document.getElementById('editName').addEventListener('input', function(e) {
            this.value = this.value.replace(/[^a-zA-Z ]/g, '');
            if (this.value.trim().length >= 3) {
                this.classList.remove('is-invalid');
            }
        });
        
        // Email validation on input
        document.getElementById('editEmail').addEventListener('input', function() {
            const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            if (emailRegex.test(this.value.trim())) {
                this.classList.remove('is-invalid');
            }
        });
        </script>
        
        <style>
        .invalid-feedback {
            display: none;
            color: #dc3545;
            font-size: 0.875em;
            margin-top: 0.25rem;
        }
        
        .form-control.is-invalid {
            border-color: #dc3545;
            padding-right: calc(1.5em + 0.75rem);
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }
        
        .form-control.is-invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
        }
        
        .form-control.is-invalid ~ .invalid-feedback {
            display: block;
        }
        </style>

<script>
    function openResetPasswordModal() {
        const modal = new bootstrap.Modal(document.getElementById('resetPasswordModal'));
        modal.show();
    }
    
    // Password validation function
    function validatePassword(password) {
        const checks = {
            length: password.length >= 8,
            uppercase: /[A-Z]/.test(password),
            number: /[0-9]/.test(password),
            special: /[!@#$%^&*]/.test(password)
        };
    
        // Update validation indicators
        document.getElementById('lengthCheck').style.color = checks.length ? 'green' : 'red';
        document.getElementById('upperCheck').style.color = checks.uppercase ? 'green' : 'red';
        document.getElementById('numberCheck').style.color = checks.number ? 'green' : 'red';
        document.getElementById('specialCheck').style.color = checks.special ? 'green' : 'red';
    
        return checks.length && checks.uppercase && checks.number && checks.special;
    }
    
    function validatePasswordForm() {
        const form = document.getElementById('resetPasswordForm');
        const newPassword = document.getElementById('newPassword');
        const confirmPassword = document.getElementById('confirmPassword');
        
        form.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
        let isValid = true;
    
        // New password validation
        if (!newPassword.value) {
            newPassword.classList.add('is-invalid');
            document.getElementById('newPasswordError').textContent = 'Password is required';
            isValid = false;
        } else if (!validatePassword(newPassword.value)) {
            newPassword.classList.add('is-invalid');
            document.getElementById('newPasswordError').textContent = 'Password does not meet requirements';
            isValid = false;
        }
    
        // Confirm password validation
        if (!confirmPassword.value) {
            confirmPassword.classList.add('is-invalid');
            document.getElementById('confirmPasswordError').textContent = 'Please confirm your password';
            isValid = false;
        } else if (confirmPassword.value !== newPassword.value) {
            confirmPassword.classList.add('is-invalid');
            document.getElementById('confirmPasswordError').textContent = 'Passwords do not match';
            isValid = false;
        }
    
        return isValid;
    }
    
    async function resetPassword() {
        try {
            if (!validatePasswordForm()) {
                return;
            }
    
            const formData = {
                newPassword: document.getElementById('newPassword').value,
                confirmPassword: document.getElementById('confirmPassword').value
            };
            
            const response = await fetch('/dashboard/reset-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });
    
            const data = await response.json();
    
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Password reset successfully',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('resetPasswordModal'));
                    modal.hide();
                    document.getElementById('resetPasswordForm').reset();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to reset password'
                });
            }
        } catch (error) {
            console.error('Reset password error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Something went wrong. Please try again.'
            });
        }
    }
    
    // Real-time password validation
    document.getElementById('newPassword').addEventListener('input', function() {
        validatePassword(this.value);
    });
    
    // Real-time confirm password validation
    document.getElementById('confirmPassword').addEventListener('input', function() {
        if (this.value === document.getElementById('newPassword').value) {
            this.classList.remove('is-invalid');
        }
    });
    
    // Clear form on modal close
    document.getElementById('resetPasswordModal').addEventListener('hidden.bs.modal', function () {
        document.getElementById('resetPasswordForm').reset();
        document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
        document.querySelectorAll('ul li').forEach(el => el.style.color = ''); // Reset validation indicators
    });
    </script>
    
    <style>
    .modal-body ul {
        padding-left: 20px;
        font-size: 0.85em;
    }
    
    .modal-body ul li {
        margin-bottom: 2px;
    }
    </style>

	
	
</body>
</html>