<!DOCTYPE html>
<html lang="en">

	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, shrink-to-fit=9">
		<meta name="description" content="Gambolthemes">
		<meta name="author" content="Gambolthemes">		
		<title>Fairway Supermarket</title>
		
		<!-- Favicon Icon -->
		<link rel="icon" type="image/png" href="images/fav.png">
		
		<!-- Stylesheets -->
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
		<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
		<link  href="/user/css/orders.css"  rel="stylesheet">
		<link href="https://fonts.googleapis.com/css2?family=Rajdhani:wght@300;400;500;600;700&display=swap" rel="stylesheet">
		<link href='/user/vendor/unicons-2.0.1/css/unicons.css' rel='stylesheet'>
		<link href="/user/css/style.css" rel="stylesheet">
		<link href="/user/css/responsive.css" rel="stylesheet">
		<link href="/user/css/night-mode.css" rel="stylesheet">
		<link href="/user/css/customstyle.css" rel="stylesheet">
		<link  href="/user/css/signupmodals.css"  rel="stylesheet">
        <link  href="/user/css/editProfileModal.css"  rel="stylesheet">
		
		<!-- Vendor Stylesheets -->
		<link href="/user/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
		<link href="/user/vendor/OwlCarousel/assets/owl.carousel.css" rel="stylesheet">
		<link href="/user/vendor/OwlCarousel/assets/owl.theme.default.min.css" rel="stylesheet">
		<link href="/user/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
		<link href="/user/vendor/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet">	
        
		
		
	</head>


	<body>
		
		
	<!-- Add Address Model End-->
		<%- include('../partials/user/header', { parentCategories: parentCategories }) %>
		<%- include('../partials/user/viewOrderDetailsModal') %>
        <%- include('../partials/user/cancelModel') %>
		<!-- Add this modal for cancel items -->
<!-- Cancel Order Modal -->

		<!-- Header End -->
	
		<!-- Body Start -->
        <%- include('../partials/user/dashboardOverview') %>
		<div class="col-xl-9 col-lg-8 col-md-12">
			<div class="dashboard-right">
				<div class="row">
					<div class="col-md-12">
						<div class="main-title-tab">
							<h4><i class="uil uil-location-point"></i>My Orders</h4>
						</div>
					</div>
					<div class="col-lg-12 col-md-12">
						<div class="pdpt-bg">
							<div class="col-md-12">
								<div class="order-list-container">
									<% if(orders && orders.length > 0) { %>
										<% orders.forEach(order => { %>
											<div class="order-card">
												<div class="order-header">
													<div class="order-info">
														<span class="order-id">#<%= order._id.toString().slice(-6) %></span>
														<span class="order-date"><%= new Date(order.createdAt).toLocaleDateString() %></span>
													</div>
													<div class="order-status <%= order.orderStatus.toLowerCase() %>">
														<%= order.orderStatus %>
													</div>
												</div>
												<div class="order-items-section">
													<h6>Order Items</h6>
													<div class="order-items">
														<% order.items.forEach(item => { %>
															<div class="order-item <%= item.cancelled ? 'cancelled' : '' %>">
																<div class="item-image">
																	<img src="<%= item.product.images[0] %>" alt="<%= item.product.name %>">
																	<% if(item.cancelled) { %>
																		<div class="cancelled-overlay">Cancelled</div>
																	<% } %>
																</div>
																<div class="item-details">
																	<h5><%= item.product.name %></h5>
																	<p class="item-qty"><%= item.product.quantity + item.product.unit %></p>
																	<p class="item-price">
																		<%= item.quantity %> × ₹<%= item.product.discountPrice || item.product.price %>
																	</p>
																	<% if(item.cancelled) { %>
																		<p class="cancel-reason">
																			<span>Cancel Reason:</span> <%= item.cancelReason %>
																			<br>
																			<small>Cancelled on <%= new Date(item.cancelledAt).toLocaleDateString() %></small>
																		</p>
																	<% } %>
																</div>
																<div class="item-total">
																	₹<%= ((item.product.discountPrice || item.product.price) * item.quantity).toFixed(2) %>
																</div>
															</div>
														<% }); %>
													</div>
												</div>
												<div class="order-status-tracker">
													<div class="status-flow">
														<div class="status-step <%= order.orderStatus === 'Pending' || order.orderStatus === 'Processing' || order.orderStatus === 'Shipped' || order.orderStatus === 'Delivered' ? 'completed' : '' %>">
															<div class="status-icon">
																<i class="uil uil-shopping-cart-alt"></i>
															</div>
															<div class="status-label">Order Placed</div>
															<div class="status-time"><%= new Date(order.createdAt).toLocaleDateString() %></div>
														</div>
												
														<div class="status-step <%= order.orderStatus === 'Processing' || order.orderStatus === 'Shipped' || order.orderStatus === 'Delivered' ? 'completed' : order.orderStatus === 'Cancelled' ? 'cancelled' : '' %>">
															<div class="status-icon">
																<i class="uil uil-process"></i>
															</div>
															<div class="status-label">Processing</div>
															<div class="status-time"><%= order.processingAt ? new Date(order.processingAt).toLocaleDateString() : '--' %></div>
														</div>
												
														<div class="status-step <%= order.orderStatus === 'Shipped' || order.orderStatus === 'Delivered' ? 'completed' : order.orderStatus === 'Cancelled' ? 'cancelled' : '' %>">
															<div class="status-icon">
																<i class="uil uil-truck"></i>
															</div>
															<div class="status-label">Shipped</div>
															<div class="status-time"><%= order.shippedAt ? new Date(order.shippedAt).toLocaleDateString() : '--' %></div>
														</div>
												
														<div class="status-step <%= order.orderStatus === 'Delivered' ? 'completed' : order.orderStatus === 'Cancelled' ? 'cancelled' : '' %>">
															<div class="status-icon">
																<i class="uil uil-check-circle"></i>
															</div>
															<div class="status-label">Delivered</div>
															<div class="status-time"><%= order.deliveredAt ? new Date(order.deliveredAt).toLocaleDateString() : '--' %></div>
														</div>
													</div>
												
													<% if(order.orderStatus === 'Cancelled') { %>
														<div class="cancellation-info">
															<div class="cancel-header">
																<i class="uil uil-times-circle"></i>
																<span>Order Cancelled</span>
															</div>
															<% if(order.cancelReason) { %>
																<div class="cancel-reason">
																	<span>Reason:</span> <%= order.cancelReason %>
																</div>
															<% } %>
														</div>
													<% } %>
												</div>
												
				
												<div class="order-footer">
													<div class="order-total">
														<span>Total:</span>
														<span class="total-amount">₹<%= order.discountTotal.toFixed(2) %></span>
													</div>
													<div class="order-actions">
														<button class="view-details-btn" onclick="viewOrderDetails('<%= order._id %>')">
															View Details
														</button>
														<% if(order.orderStatus === 'Pending' || order.orderStatus === 'Processing') { %>
                                                            <div class="dropdown">
                                                                <button class="cancel-options-btn" data-bs-toggle="dropdown">
                                                                    <i class="uil uil-times"></i> 
                                                                    <span>Cancel Order</span>
                                                                </button>
                                                                <ul class="dropdown-menu dropdown-menu-end">
                                                                    <li>
                                                                        <a class="dropdown-item" href="#" onclick="showCancelModal('<%= order._id %>', 'full')">
                                                                            Cancel Entire Order
                                                                        </a>
                                                                    </li>
                                                                    <li>
                                                                        <a class="dropdown-item" href="#" onclick="showCancelModal('<%= order._id %>', 'partial')">
                                                                            Cancel Selected Items
                                                                        </a>
                                                                    </li>
                                                                </ul>
                                                            </div>
														<% } %>
													</div>
												</div>
											</div>
											
										<% }); %>
									<% } else { %>
										<div class="no-orders">
											<div class="no-orders-content">
												<i class="uil uil-box"></i>
												<h3>No Orders Yet</h3>
												<p>Looks like you haven't made your first order yet.</p>
												<a href="/" class="start-shopping-btn">Start Shopping</a>
											</div>
										</div>
									<% } %>
								</div>
							</div>
						</div>
					</div>
				</div>
     
        
        <%- include('../partials/user/resetResetModal') %>

        


	<!-- Javascripts -->
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
	<script src="/user/js/jquery.min.js"></script>
	<script src="/user/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
	<script src="/user/vendor/bootstrap-select/js/bootstrap-select.min.js"></script>	
	<script src="/user/vendor/OwlCarousel/owl.carousel.js"></script>
	<script src="/user/js/jquery.countdown.min.js"></script>
	<script src="/user/js/custom.js"></script>
	<script src="/user/js/offset_overlay.js"></script>
	<script src="/user/js/night-mode.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="/user/js/editReset.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<script >
		async function viewOrderDetails(orderId) {
    try {
        const response = await fetch(`/orders/${orderId}`);
        const data = await response.json();

        if (data.success) {
            // Get the modal content container
            const modalContent = document.getElementById('orderDetailsContent');
            const order = data.order;

            

            // Show the modal
            const orderModal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
            orderModal.show();
        } else {
            throw new Error(data.message || 'Failed to load order details');
        }
    } catch (error) {
        console.error('View order details error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to load order details'
        });
    }
}
// Global variables
let selectedItemsForCancel = new Set();
let currentOrderId = null;

// Show cancel modal
function showCancelModal(orderId, type) {
   currentOrderId = orderId;
   const modal = document.getElementById('cancelOrderModal');
   const itemsSection = modal.querySelector('.cancel-items-section');
   
   // Reset form
   document.getElementById('cancelOrderForm').reset();
   document.getElementById('cancelOrderId').value = orderId;
   document.getElementById('cancelType').value = type;
   selectedItemsForCancel.clear();
   
   // Show/hide items section based on cancel type
   itemsSection.style.display = type === 'partial' ? 'block' : 'none';
   
   const bsModal = new bootstrap.Modal(modal);
   bsModal.show();
}

// Toggle item selection
function toggleCancelItem(itemId) {
   if (selectedItemsForCancel.has(itemId)) {
       selectedItemsForCancel.delete(itemId);
   } else {
       selectedItemsForCancel.add(itemId);
   }
   updateCancelUI();
}

// Update UI based on selections
function updateCancelUI() {
   const submitBtn = document.querySelector('#cancelOrderModal .btn-danger');
   submitBtn.disabled = selectedItemsForCancel.size === 0;
   
   // Update totals
   const selectedItems = document.querySelectorAll('#cancelOrderModal input[type="checkbox"]:checked');
   let totalAmount = 0;
   selectedItems.forEach(item => {
       const priceEl = item.closest('.cancel-item').querySelector('.item-total');
       totalAmount += parseFloat(priceEl.textContent.replace('₹', ''));
   });
   
   const totalEl = document.querySelector('.cancel-total');
   if (totalEl) {
       totalEl.textContent = `₹${totalAmount.toFixed(2)}`;
   }
}

// Handle reason selection
document.getElementById('cancelReason')?.addEventListener('change', function() {
   const otherReasonGroup = document.getElementById('otherReasonGroup');
   otherReasonGroup.style.display = this.value === 'Other' ? 'block' : 'none';
   
   // Required validation for other reason
   const otherReason = document.getElementById('otherReason');
   otherReason.required = this.value === 'Other';
});

// Process cancellation
async function processCancellation() {
   try {
       const form = document.getElementById('cancelOrderForm');
       if (!form.checkValidity()) {
           form.reportValidity();
           return;
       }

       const cancelType = document.getElementById('cancelType').value;
       const reasonSelect = document.getElementById('cancelReason');
       const otherReasonText = document.getElementById('otherReason');

       if (!reasonSelect.value) {
           showNotification('Please select a cancellation reason', 'error');
           return;
       }

       if (cancelType === 'partial' && selectedItemsForCancel.size === 0) {
           showNotification('Please select items to cancel', 'error');
           return;
       }

       // Show loading state
       const submitBtn = document.querySelector('#cancelOrderModal .btn-danger');
       const originalText = submitBtn.innerHTML;
       submitBtn.disabled = true;
       submitBtn.innerHTML = `<i class="uil uil-spinner-alt"></i> Processing...`;

       const response = await fetch('/orders/cancel', {
           method: 'POST',
           headers: {
               'Content-Type': 'application/json'
           },
           body: JSON.stringify({
               orderId: currentOrderId,
               cancelType,
               items: Array.from(selectedItemsForCancel),
               reason: reasonSelect.value === 'Other' ? otherReasonText.value : reasonSelect.value
           })
       });

       const data = await response.json();

       if (data.success) {
           bootstrap.Modal.getInstance(document.getElementById('cancelOrderModal')).hide();
           showNotification('Order cancelled successfully', 'success');
           setTimeout(() => window.location.reload(), 1500);
       } else {
           throw new Error(data.message);
       }

   } catch (error) {
       showNotification(error.message || 'Failed to cancel order', 'error');
       // Reset button
       const submitBtn = document.querySelector('#cancelOrderModal .btn-danger');
       submitBtn.disabled = false;
       submitBtn.innerHTML = 'Confirm Cancellation';
   }
}

// Notification helper
function showNotification(message, type = 'success') {
   Swal.fire({
       text: message,
       icon: type,
       toast: true,
       position: 'top-end',
       showConfirmButton: false,
       timer: 3000,
       timerProgressBar: true,
       customClass: {
           popup: `notification-${type}`
       }
   });
}

// Add animation classes when modal opens
document.getElementById('cancelOrderModal')?.addEventListener('shown.bs.modal', function() {
   document.querySelectorAll('.cancel-item').forEach((item, index) => {
       setTimeout(() => {
           item.classList.add('fade-in');
       }, index * 100);
   });
});

// Clean up when modal closes
document.getElementById('cancelOrderModal')?.addEventListener('hidden.bs.modal', function() {
   selectedItemsForCancel.clear();
   currentOrderId = null;
   document.querySelectorAll('.cancel-item').forEach(item => {
       item.classList.remove('fade-in');
   });
});
	</script>

</body>
</html>