<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
		<meta name="description-gambolthemes" content="">
		<meta name="author-gambolthemes" content="">
		<title>Fairway Supermarket Admin</title>
		<link href="css/styles.css" rel="stylesheet">
		<link href="css/admin-style.css" rel="stylesheet">
		<link href="css/admin-custom" rel="stylesheet">
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<link  href="/admin/css/order.css"  rel="stylesheet">
		<style>
			
			</style>
		
		<!-- Vendor Stylesheets -->
		<link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
		<link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
		
	</head>

    <body class="sb-nav-fixed">
		<%- include('../partials/admin/topnav') %>
     
        <div id="layoutSidenav">
			<%- include('../partials/admin/sidebar') %>
            <div id="layoutSidenav_content">
                <main>
					<div class="container-fluid">
						<h2 class="mt-30 page-title">Orders</h2>
						<ol class="breadcrumb mb-30">
							<li class="breadcrumb-item"><a href="/admin/dashboard">Dashboard</a></li>
							<li class="breadcrumb-item active">Orders</li>
						</ol>
					
						<div class="row justify-content-between">
							<!-- Filters Section -->
							
					
							<!-- Users Table -->
							<div class="container-fluid">
								<div class="row">
									<div class="col-12">
										<!-- Order Stats Cards -->
										<div class="row mb-4">
											<div class="col-xl-3 col-sm-6 mb-3">
												<div class="stats-card">
													<div class="stats-card-content">
														<div class="stats-info">
															<h5>Total Orders</h5>
															<h3><%= totalOrders %></h3>
														</div>
														<div class="stats-icon">
															<i class="fas fa-shopping-bag"></i>
														</div>
													</div>
												</div>
											</div>
											<div class="col-xl-3 col-sm-6 mb-3">
												<div class="stats-card pending">
													<div class="stats-card-content">
														<div class="stats-info">
															<h5>Pending Orders</h5>
															<h3><%= pendingOrders %></h3>
														</div>
														<div class="stats-icon">
															<i class="fas fa-clock"></i>
														</div>
													</div>
												</div>
											</div>
											<div class="col-xl-3 col-sm-6 mb-3">
												<div class="stats-card delivered">
													<div class="stats-card-content">
														<div class="stats-info">
															<h5>Delivered Orders</h5>
															<h3><%= deliveredOrders %></h3>
														</div>
														<div class="stats-icon">
															<i class="fas fa-check-circle"></i>
														</div>
													</div>
												</div>
											</div>
											<div class="col-xl-3 col-sm-6 mb-3">
												<div class="stats-card cancelled">
													<div class="stats-card-content">
														<div class="stats-info">
															<h5>Cancelled Orders</h5>
															<h3><%= cancelledOrders %></h3>
														</div>
														<div class="stats-icon">
															<i class="fas fa-times-circle"></i>
														</div>
													</div>
												</div>
											</div>
										</div>
							
										<!-- Orders Table -->
										<div class="card">
											<div class="card-header">
												<div class="d-flex justify-content-between align-items-center">
													<h5 class="card-title mb-0">Orders</h5>
													<div class="order-filters">
														<select class="form-select me-2" id="statusFilter" onchange="filterOrders()">
															<option value="">All Status</option>
															<option value="Pending">Pending</option>
															<option value="Processing">Processing</option>
															<option value="Shipped">Shipped</option>
															<option value="Delivered">Delivered</option>
															<option value="Cancelled">Cancelled</option>
														</select>
														<input type="date" class="form-control" id="dateFilter" onchange="filterOrders()">
													</div>
												</div>
											</div>
											<div class="card-body">
												<div class="table-responsive">
													<table class="table table-hover">
														<thead>
															<tr>
																<th>Order ID</th>
																<th>Customer</th>
																<th>Items</th>
																<th>Total</th>
																<th>Status</th>
																<th>Date</th>
																<th>Actions</th>
															</tr>
														</thead>
														<tbody>
															<% orders.forEach(order => { %>
																<tr>
																	<td>#<%= order._id.toString().slice(-6) %></td>
																	<td>
																		<div class="d-flex align-items-center">
																			<div class="user-info">
																				<h6 class="mb-0"><%= order.user.name %></h6>
																				<small><%= order.user.email %></small>
																			</div>
																		</div>
																	</td>
																	<td><%= order.items.length %> items</td>
																	<td>â‚¹<%= order.discountTotal.toFixed(2) %></td>
																	<td>
																		<span class="status-badge <%= order.orderStatus.toLowerCase() %>">
																			<%= order.orderStatus %>
																		</span>
																	</td>
																	<td><%= new Date(order.createdAt).toLocaleDateString() %></td>
																	<td>
																		<div class="action-buttons">
																			<button class="btn btn-sm btn-info" 
																					onclick="viewOrder('<%= order._id %>')">
																				<i class="fas fa-eye"></i>
																			</button>
																			<% if(order.orderStatus !== 'Delivered' && order.orderStatus !== 'Cancelled') { %>
																				<button class="btn btn-sm btn-success"
																						onclick="updateStatus('<%= order._id %>')">
																					<i class="fas fa-truck"></i>
																				</button>
																			<% } %>
																		</div>
																	</td>
																</tr>
															<% }); %>
														</tbody>
													</table>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
                </main>
            </div>
        </div>
        <script src="js/jquery.min.js"></script>
        <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
        <script src="js/scripts.js"></script>

		<script>
			async function toggleUserStatus(userId, currentStatus) {  // Fixed function name and parameter
    try {
        const response = await fetch(`/admin/users/isBlocked/${userId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (data.success) {
            // Update the badge status
            const badge = document.getElementById(`status-badge-${userId}`);
            const newStatus = !currentStatus;
            
            // Update badge text
            badge.textContent = newStatus ? 'Blocked' : 'Active';
            badge.className = `badge-item badge-status ${newStatus ? 'bg-danger' : 'bg-success'}`;
            
            // Update the toggle button
            const toggleBtn = badge.parentElement.nextElementSibling.querySelector('button');
            if (newStatus) {
                toggleBtn.innerHTML = '<i class="fas fa-check text-success"></i> Unblock';
            } else {
                toggleBtn.innerHTML = '<i class="fas fa-ban text-danger"></i> Block';
            }
            toggleBtn.setAttribute('onclick', `toggleUserStatus('${userId}', ${newStatus})`);

            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: data.message,
                showConfirmButton: false,
                timer: 1500
            });

            // Reload the page after success
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong'
        });
    }
}

async function deleteUser(userId) {  // Fixed parameter name
    try {
        const result = await Swal.fire({
            title: 'Delete User',
            text: "Are you sure you want to delete this user?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        });

        if (result.isConfirmed) {
            const response = await fetch(`/admin/users/delete/${userId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            const data = await response.json();
            
            if (data.success) {
                // Remove the row from the table
                const row = document.querySelector(`button[onclick="deleteUser('${userId}')"]`).closest('tr');
                
                // Add fade out animation
                row.style.opacity = '0';
                row.style.transition = 'opacity 0.5s ease';
                
                // Remove row after animation
                setTimeout(() => {
                    row.remove();
                    
                    // Check if table is empty
                    const tbody = document.querySelector('tbody');
                    if (tbody.children.length === 0) {
                        tbody.innerHTML = `
                            <tr>
                                <td colspan="6" class="text-center">No Users found</td>
                            </tr>
                        `;
                    }
                }, 500);

                Swal.fire({
                    icon: 'success',
                    title: 'Deleted!',
                    text: 'User has been deleted.',
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to delete user'
                });
            }
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong while deleting the user'
        });
    }
}
		</script>
       
    </body>
</html>
